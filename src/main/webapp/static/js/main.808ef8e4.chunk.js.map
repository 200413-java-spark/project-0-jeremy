{"version":3,"sources":["services/noteservice.js","notes.js","index.js"],"names":["baseUrl","axios","get","then","response","data","n","request","newObject","post","Notes","useState","notes","setNotes","numToShow","setNumToShow","newNote","setNewNote","currentCategory","setCategory","categories","setCategories","useEffect","noteService","allNotes","currentNotes","initialCategories","handleCategoryChange","event","target","value","handleNumShownChange","NumToDisplaySelect","className","onChange","NoteCard","note","console","log","category","date","creationDateTime","monthValue","dayOfMonth","year","hour","minute","second","entry","CategorySelect","map","cat","key","document","title","id","onSubmit","noteObject","Date","toISOString","replace","slice","resp","preventDefault","type","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.808ef8e4.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://192.168.1.100:8081/api/notes'\n\nconst getAllNotes = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getNote = (id) => {\n  const request = axios.get(`${baseUrl}/note/${id}`)\n  return request.then(response => response.data)\n}\n\nconst getLatest = (n = 10) => {\n  const request = axios.get(`${baseUrl}/latest/${n}`)\n  return request.then(response => response.data)\n}\n\nconst getCategories = () => {\n  const request = axios.get(`${baseUrl}/categories`)\n  return request.then(response => response.data)\n}\n\nconst insertNote = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst updateNote = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteNote = (id) => {\n  const request = axios.delete(`{baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAllNotes, getNote, getLatest, getCategories, insertNote, updateNote, deleteNote }","import React, { useState, useEffect } from \"react\"\nimport noteService from \"./services/noteservice\"\n\nconst Notes = () => {\n  const [notes, setNotes] = useState([])\n  const [numToShow, setNumToShow] = useState(\"10\")\n  const [newNote, setNewNote] = useState(\"\")\n  const [currentCategory, setCategory] = useState(\"default\")\n  const [categories, setCategories] = useState([\"\"])\n\n  useEffect(() => {\n    if (numToShow === \"all\") {\n      noteService.getAllNotes().then((allNotes) => {\n        setNotes(allNotes)\n      })\n    } else {\n      noteService.getLatest(numToShow).then((currentNotes) => {\n        setNotes(currentNotes)\n      })\n    }\n  }, [numToShow])\n\n  useEffect(() => {\n    noteService.getCategories().then((initialCategories) => {\n      setCategories(initialCategories)\n    })\n  }, [])\n\n  const handleNoteChange = (event) => {\n    event.preventDefault()\n    setNewNote(event.target.value)\n  }\n\n  const handleCategoryChange = (event) => {\n    setCategory(event.target.value)\n  }\n\n  const handleNumShownChange = (event) => {\n    setNumToShow(event.target.value)\n  }\n\n  const NumToDisplaySelect = () => {\n    return (\n      <div className=\"note-heading\">\n        <small>Select number of notes to grab </small>\n        <select value={numToShow} onChange={handleNumShownChange}>\n          <option value=\"5\">5</option>\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n          <option value=\"50\">50</option>\n          <option value=\"all\">all</option>\n        </select>\n      </div>\n    )\n  }\n\n  const NoteCard = (note) => {\n    console.log(note)\n    const category = note.note.category\n    const date = note.note.creationDateTime\n\n    return (\n      <div className=\"note-card\">\n        <p>\n          <small>\n            <b>Category:</b> {category} | <b>Created:</b> {date.monthValue}/\n            {date.dayOfMonth}/{date.year} @{date.hour}:{date.minute}:\n            {date.second}\n          </small>\n        </p>\n        <p>{note.note.entry}</p>\n      </div>\n    )\n  }\n\n  const addNote = (event) => {\n    const noteObject = {\n      entry: newNote,\n      category: currentCategory,\n      creationDateTime: new Date().toISOString().replace(\"T\", \" \").slice(0, 19)\n    }\n\n    console.log(noteObject)\n\n    noteService.insertNote(noteObject).then((resp) => {\n      console.log(resp)\n      setNewNote(\"\")\n    })\n  }\n\n  const CategorySelect = () => {\n    return (\n      <small>\n        Select a category\n        <select value={currentCategory} onChange={handleCategoryChange}>\n          {categories.map((cat) => (\n            <option value={cat} key={cat}>\n              {cat}\n            </option>\n          ))}\n        </select>\n      </small>\n    )\n  }\n\n  document.title = \"Project 0 Notes\"\n\n  return (\n    <>\n      <h1>Notes</h1>\n      <NumToDisplaySelect />\n      <div className=\"note-list\">\n        {notes.map((note) => (\n          <NoteCard key={note.id} note={note} />\n        ))}\n      </div>\n      <div className=\"entryarea\">\n        <form onSubmit={addNote}>\n          <small>Enter note:</small>\n          <br />\n          <textarea value={newNote} onChange={handleNoteChange} />\n          <CategorySelect />\n          <br />\n          <button type=\"submit\">Save</button>\n        </form>\n      </div>\n    </>\n  )\n}\n\nexport default Notes\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Notes from './notes'\nimport './sakura.css'\n\nReactDOM.render(\n  <Notes />,\n  document.getElementById('root')\n)"],"sourceRoot":""}